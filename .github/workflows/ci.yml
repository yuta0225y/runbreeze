name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install Brakeman
        run: gem install brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install Rubocop
        run: gem install rubocop

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myapp_test
        # ports: - 5432:5432  # この行を削除
        options: >-
          --health-cmd="pg_isready -U postgres -d myapp_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client dnsutils

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Set up test database
        env:
          DATABASE_URL: postgres://postgres:password@db:5432/myapp_test
        run: |
          bin/rails db:create
          bin/rails db:schema:load

      - name: Debug - Check DATABASE_URL
        run: echo "DATABASE_URL=$DATABASE_URL"

      - name: Debug - Test DNS resolution for 'db'
        run: |
          sudo apt-get install -y dnsutils
          nslookup db || echo "Cannot resolve 'db'"
          ping -c 1 db || echo "'db' is not reachable"

      - name: Debug - Test PostgreSQL Connection
        run: |
          PGPASSWORD=password psql -h db -U postgres -c "\l" || echo "PostgreSQL connection failed"

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@db:5432/myapp_test
        run: |
          bin/rails test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
